/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */
#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/rgb.h>
#include <dt-bindings/zmk/ext_power.h>

#define BASE 0
#define RAISE 1
#define ADJUST 2
    
    &mt {
        tapping-term-ms = <200>;
    };
    
/ {
    macros {
        sw_025: sw_025 {
            label = "sw_025";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <20>;
            tap-ms = <10>;
            bindings
                = <&macro_press &kp LCTRL>
                , <&macro_tap &kp A>
                , <&macro_release &kp LCTRL>
                , <&macro_tap &kp KP_N0 &kp DOT &kp KP_N0 &kp KP_N2 &kp KP_N5>
                , <&macro_tap &kp RET>
                ;
        };
        sw_050: sw_050 {
            label = "sw_050";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <20>;
            tap-ms = <10>;
            bindings
                = <&macro_press &kp LCTRL>
                , <&macro_tap &kp A>
                , <&macro_release &kp LCTRL>
                , <&macro_tap &kp KP_N0 &kp DOT &kp KP_N0 &kp KP_N5 &kp KP_N0>
                , <&macro_tap &kp RET>
                ;
        };
        sw_075: sw_075 {
            label = "sw_075";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <20>;
            tap-ms = <10>;
            bindings
                = <&macro_press &kp LCTRL>
                , <&macro_tap &kp A>
                , <&macro_release &kp LCTRL>
                , <&macro_tap &kp KP_N0 &kp DOT &kp KP_N0 &kp KP_N7 &kp KP_N5>
                , <&macro_tap &kp RET>
                ;
        };
        sw_100: sw_100 {
            label = "sw_100";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <20>;
            tap-ms = <10>;
            bindings
                = <&macro_press &kp LCTRL>
                , <&macro_tap &kp A>
                , <&macro_release &kp LCTRL>
                , <&macro_tap &kp KP_N0 &kp DOT &kp KP_N1 &kp KP_N0 &kp KP_N0>
                , <&macro_tap &kp RET>
                ;
        };
        sw_125: sw_125 {
            label = "sw_125";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <20>;
            tap-ms = <10>;
            bindings
                = <&macro_press &kp LCTRL>
                , <&macro_tap &kp A>
                , <&macro_release &kp LCTRL>
                , <&macro_tap &kp KP_N0 &kp DOT &kp KP_N1 &kp KP_N2 &kp KP_N5>
                , <&macro_tap &kp RET>
                ;
        };
        sym_deg: sym_deg {
            label = "sym_deg";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <20>;
            tap-ms = <10>;
            bindings
                = <&macro_press &kp LALT>
                , <&macro_tap &kp KP_N2 &kp KP_N4 &kp KP_N8>
                , <&macro_release &kp LALT>
                ;
        };
        sym_mu: sym_mu {
            label = "sym_mu";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <20>;
            tap-ms = <10>;
            bindings
                = <&macro_press &kp LALT>
                , <&macro_tap &kp KP_N2 &kp KP_N3 &kp KP_N0>
                , <&macro_release &kp LALT>
                ;
        };
        sym_eps: sym_eps {
            label = "sym_eps";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <20>;
            tap-ms = <10>;
            bindings
                = <&macro_press &kp LALT>
                , <&macro_tap &kp KP_N2 &kp KP_N3 &kp KP_N8>
                , <&macro_release &kp LALT>
                ;
        };
        sym_pi: sym_pi {
            label = "sym_pi";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <20>;
            tap-ms = <10>;
            bindings
                = <&macro_press &kp LALT>
                , <&macro_tap &kp KP_N2 &kp KP_N2 &kp KP_N7>
                , <&macro_release &kp LALT>
                ;
        };
        sym_sig: sym_sig {
            label = "sym_sig";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <20>;
            tap-ms = <10>;
            bindings
                = <&macro_press &kp LALT>
                , <&macro_tap &kp KP_N2 &kp KP_N2 &kp KP_N9>
                , <&macro_release &kp LALT>
                ;
        };
        plsmns: plsmns {
            label = "plsmns";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <20>;
            tap-ms = <10>;
            bindings
                = <&macro_press &kp LALT>
                , <&macro_tap &kp KP_N0 &kp KP_N1 &kp KP_N7 &kp KP_N7>
                , <&macro_release &kp LALT>
                ;
        };
        paren: paren {
            label = "paren";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <20>;
            tap-ms = <10>;
            bindings
                = <&macro_tap &kp F2 &kp LPAR &kp RPAR &kp LEFT>
                ;
        };
        
        combos {
            compatible = "zmk,combos";
            cmb_bspc {
                timeout-ms = <50>;
                key-positions = <0 1>;
                bindings = <&kp BSPC>;
            };
            cmb_del {
                timeout-ms = <50>;
                key-positions = <1 2>;
                bindings = <&kp DEL>;
            };
            cmb_shft {
                timeout-ms = <50>;
                key-positions = <34 35>;
                bindings = <&kp RSHFT>;
            };
            cmb_up {
                timeout-ms = <50>;
                key-positions = <57 58>;
                bindings = <&kp UP>;
            };
        };
    };
};

/ {
    // Activate ADJUST layer by pressing numarrow and code
    //conditional_layers {
    //     compatible = "zmk,conditional-layers";
    //     adjust_layer {
    //         if-layers = <NUMBER CODE>;
    //         then-layer = <ADJUST>;
    //     };
    //};
    
    behaviors {
        //mo_tog: behavior_mo_tog {
        //    compatible = "zmk,behavior-hold-tap";
        //    label = "mo_tog";
        //    #binding-cells = <2>;
        //    flavor = "hold-preferred";
        //    tapping-term-ms = <200>;
        //    bindings = <&mo>, <&tog>;
        //};
        td_shftcaps: td_shftcaps {
            compatible = "zmk,behavior-tap-dance";
            label = "td_shftcaps";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&kp LSHFT>, <&kp CAPS>;
        };
    };
  
    keymap {
        compatible = "zmk,keymap";
        
        default_layer {
// ------------------------------------------------------------------------------------------------------------
// |   ESC   |  1  |  2  |  3  |  4  |  5  |                  |  6  |  7   |  8   |  9  |   0   |  BKSPC   |
// |   TAB   |  Q  |  W  |  E  |  R  |  T  |                  |  Y  |  U   |  I   |  O  |   P   |   | \    |
// |SHFT/CAPS|  A  |  S  |  D  |  F  |  G  |                  |  H  |  J   |  K   |  L  |   ;   |   APOS   |
// |   CTRL  |  Z  |  X  |  C  |  V  |  B  |MUTE | |PLAY/PAUSE|  N  |  M   |  ,   |  .  |   /   |ENTER/ADJUST|
//                 |CTRL | ALT | RET |RAISE|SPACE| |  SPACE   |RAISE|  <-  |   v  |  -> |
            bindings = <
&kp ESC      &kp N1 &kp N2    &kp N3   &kp N4  &kp N5                         &kp N6    &kp N7   &kp N8    &kp N9   &kp N0   &kp BSPC
&kp TAB      &kp Q  &kp W     &kp E    &kp R   &kp T                          &kp Y     &kp U    &kp I     &kp O    &kp P    &kp PIPE
&td_shftcaps &kp A  &kp S     &kp D    &kp F   &kp G                          &kp H     &kp J    &kp K     &kp L    &kp SEMI &kp APOS
&kp LCTRL    &kp Z  &kp X     &kp C    &kp V   &kp B     &kp C_MUTE &kp C_PP  &kp N     &kp M    &kp COMMA &kp DOT  &kp FSLH &lt ADJUST RET
                    &kp LCTRL &kp LALT &kp RET &mo RAISE &kp SPACE  &kp SPACE &mo RAISE &kp LEFT &kp DOWN &kp RIGHT
            >;
            sensor-bindings = <&inc_dec_kp LEFT RIGHT &inc_dec_kp C_VOL_DN C_VOL_UP>;
        };
        
        raise_layer {
// TODO: Some binds are waiting for shifted keycode support.
// ------------------------------------------------------------------------------------------------------------
// |    `    |  ~   |     |     |  $  |(macro)|                | .025 | .050 | .075 | 0.1 | 0.125 |  BKSPC  |
// |   TAB   |  9   |  8  |  7  |  =  |  _  |                  |  σ   |  µ   |  ε   |  {  |   }   |         |
// |SHFT/CAPS|  6   |  5  |  4  |  +  |  -  |                  |  °   |  π   |  ±   |  [  |   ]   |         |
// |BaseLayer|  3   |  2  |  1  |  *  |  /  | MUTE| |PLAY/PAUSE| HOME | END  |  ,   |  .  | LGUI  |PRINTSCRN|
//                  |  .  |  0  | RET |     |SPACE| |  SPACE   |      |  <-  |   v  |  -> |
            bindings = <
&kp GRAVE &kp TILDE &none   &none  &kp DLLR  &paren                       &sw_025  &sw_050 &sw_075  &sw_100  &sw_125  &kp BSPC
&trans    &kp N9    &kp N8  &kp N7 &kp EQUAL &kp UNDER                    &sym_sig &sym_mu &sym_eps &kp LBRC &kp RBRC &none
&trans    &kp N6    &kp N5  &kp N4 &kp PLUS  &kp MINUS                    &sym_deg &sym_pi &plsmns  &kp LBKT &kp RBKT &none
&to BASE  &kp N3    &kp N2  &kp N1 &kp STAR  &kp FSLH  &trans      &trans &kp HOME &kp END &trans   &trans   &kp LGUI &kp PSCRN
                    &kp DOT &kp N0 &trans    &trans    &trans      &trans &trans   &trans  &trans   &trans
            >;
            sensor-bindings = <&inc_dec_kp UP DOWN &inc_dec_kp C_NEXT C_PREV>;
        };
        
        Adjust_layer {
// ------------------------------------------------------------------------------------------------------------
// |BTCLR    | BT1   | BT2   |  BT3  |  BT4  |  BT5  |                 |      |      |       |      |       |     |
// |EXTPWR   |RGB_HUI|RGB_SAI|RGB_BRI|RGB_EFF|       |                 |      |      |       |      |       |     |
// |         |RGB_HUD|RGB_SAD|RGB_BRD|RGB_TOG|       |                 |      |      |       |      |       |     |
// |BaseLayer|       |       |       |       |       |MUTE| |PLAY/PAUSE|      |      |       |      |       |     |
//                   |       |       |       |       |    | |          |      |      |       |      |

        bindings = <
&bt BT_CLR                      &bt BT_SEL 0    &bt BT_SEL 1    &bt BT_SEL 2    &bt BT_SEL 3     &bt BT_SEL 4                 &none &none  &none  &none &none &none
&ext_power EXT_POWER_TOGGLE_CMD &rgb_ug RGB_HUI &rgb_ug RGB_SAI &rgb_ug RGB_BRI &rgb_ug RGB_EFF  &none                        &none &none  &none  &none &none &none
&none                           &rgb_ug RGB_HUD &rgb_ug RGB_SAD &rgb_ug RGB_BRD &rgb_ug RGB_TOG  &none                        &none &none  &none  &none &none &none
&to BASE                        &none           &none           &none           &none            &none          &trans &trans &none &none  &none  &none &none &none
                                                &none           &none           &none            &none          &none  &none  &none &trans &trans &none
            >;

            ssensor-bindings = <&inc_dec_kp UP DOWN &inc_dec_kp C_NEXT C_PREV>;

        };
    };
};
