/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */
#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/rgb.h>
#include <dt-bindings/zmk/ext_power.h>

#define BASE 0
#define RAISE 1
#define MIRROR 2
#define ADJUST 3

#define MO_TOG(layer) &mo_tog layer layer   // Macro to apply momentary-layer-on-hold/toggle-layer-on-tap to a specific layer
&mt {
    tapping-term-ms = <200>;
    retro-tap;
};
    
/ {
    macros {
        mcr_025: mcr_025 {
            label = "mcr_025";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <20>;
            tap-ms = <10>;
            bindings
                = <&macro_press &kp LCTRL>
                , <&macro_tap &kp A>
                , <&macro_release &kp LCTRL>
                , <&macro_tap &kp KP_N0 &kp DOT &kp KP_N0 &kp KP_N2 &kp KP_N5>
                , <&macro_tap &kp RET>
                ;
        };
        mcr_125: mcr_125 {
            label = "mcr_125";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <20>;
            tap-ms = <10>;
            bindings
                = <&macro_press &kp LCTRL>
                , <&macro_tap &kp A>
                , <&macro_release &kp LCTRL>
                , <&macro_tap &kp KP_N0 &kp DOT &kp KP_N1 &kp KP_N2 &kp KP_N5>
                , <&macro_tap &kp RET>
                ;
        };
        mcr_250: mcr_250 {
            label = "mcr_250";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <20>;
            tap-ms = <10>;
            bindings
                = <&macro_press &kp LCTRL>
                , <&macro_tap &kp A>
                , <&macro_release &kp LCTRL>
                , <&macro_tap &kp KP_N0 &kp DOT &kp KP_N2 &kp KP_N5>
                , <&macro_tap &kp RET>
                ;
        };
        mcr_375: mcr_375 {
            label = "mcr_375";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <20>;
            tap-ms = <10>;
            bindings
                = <&macro_press &kp LCTRL>
                , <&macro_tap &kp A>
                , <&macro_release &kp LCTRL>
                , <&macro_tap &kp KP_N0 &kp DOT &kp KP_N3 &kp KP_N7 &kp KP_N5>
                , <&macro_tap &kp RET>
                ;
        };
        mcr_500: mcr_500 {
            label = "mcr_500";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <20>;
            tap-ms = <10>;
            bindings
                = <&macro_press &kp LCTRL>
                , <&macro_tap &kp A>
                , <&macro_release &kp LCTRL>
                , <&macro_tap &kp KP_N0 &kp DOT &kp KP_N5>
                , <&macro_tap &kp RET>
                ;
        };
        sym_deg: sym_deg {
            label = "sym_deg";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <20>;
            tap-ms = <10>;
            bindings
                = <&macro_press &kp LALT>
                , <&macro_tap &kp KP_N2 &kp KP_N4 &kp KP_N8>
                , <&macro_release &kp LALT>
                ;
        };
        sym_mueps: sym_mueps {
            label = "sym_mueps";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <20>;
            tap-ms = <10>;
            bindings
                = <&macro_press &kp LALT>
                , <&macro_tap &kp KP_N2 &kp KP_N3 &kp KP_N0>
                , <&macro_release &kp LALT>
                , <&macro_press &kp LALT>
                , <&macro_tap &kp KP_N2 &kp KP_N3 &kp KP_N8>
                , <&macro_release &kp LALT>
                ;
        };
        sym_mu: sym_mu {
            label = "sym_mu";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <20>;
            tap-ms = <10>;
            bindings
                = <&macro_press &kp LALT>
                , <&macro_tap &kp KP_N2 &kp KP_N3 &kp KP_N0>
                , <&macro_release &kp LALT>
                ;
        };
        sym_eps: sym_eps {
            label = "sym_eps";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <20>;
            tap-ms = <10>;
            bindings
                = <&macro_press &kp LALT>
                , <&macro_tap &kp KP_N2 &kp KP_N3 &kp KP_N8>
                , <&macro_release &kp LALT>
                ;
        };
        sym_pi: sym_pi {
            label = "sym_pi";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <20>;
            tap-ms = <10>;
            bindings
                = <&macro_press &kp LALT>
                , <&macro_tap &kp KP_N2 &kp KP_N2 &kp KP_N7>
                , <&macro_release &kp LALT>
                ;
        };
        sym_sig: sym_sig {
            label = "sym_sig";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <20>;
            tap-ms = <10>;
            bindings
                = <&macro_press &kp LALT>
                , <&macro_tap &kp KP_N2 &kp KP_N2 &kp KP_N9>
                , <&macro_release &kp LALT>
                ;
        };
        plsmns: plsmns {
            label = "plsmns";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <20>;
            tap-ms = <10>;
            bindings
                = <&macro_press &kp LALT>
                , <&macro_tap &kp KP_N0 &kp KP_N1 &kp KP_N7 &kp KP_N7>
                , <&macro_release &kp LALT>
                ;
        };
        paren: paren {
            label = "paren";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <20>;
            tap-ms = <10>;
            bindings
                = <&macro_tap &kp F2 &kp LPAR &kp RPAR &kp LEFT>
                ;
        };
        

          
        
        combos {
/*                        KEY POSITIONS
  ╭────────────────────────╮         ╭────────────────────────╮
  │  0   1   2   3   4   5 │         │  6   7   8   9  10  11 │
  │ 12  13  14  15  16  17 │         │ 18  19  20  21  22  23 │
  │ 24  25  26  27  28  29 ╰───╮ ╭───╯ 30  31  32  33  34  35 │
  │ 36  37  38  39  40  41  42 | | 43  44  45  46  47  48  49 │  note: encoder pushbuttons on 42 and 43
  ╰───────╮ 50  51  52  53  54 │ │ 55  56  57  58  59 ╭───────╯
          ╰────────────────────╯ ╰────────────────────╯        
                      COMBOS with RAISE (53)
  ╭───────────────────────────╮          ╭────────────────────────╮
  │ _  .025 .125 .25  .375 .5 │          │  _   _   _   _   _   _ │
  │ _   _    _    ^    _    _ │          │  _   _   _   _   _   _ │
  │ _   _    <-   v    ->{±}_ ╰────╮ ╭───╯  _   _   _   _   _   _ │
  │ _   π    °    σ    µ{µε}ε    _ | | _    _   _   _   _   _   _ │
  ╰───────╮ PSCRN _    _  RAISE  _ │ │ _    _   _   _   _ ╭───────╯
          ╰────────────────────────╯ ╰────────────────────╯        */
            compatible = "zmk,combos";
            cmb_bspc {
                timeout-ms = <50>;
                key-positions = <13 14>;
                bindings = <&kp BSPC>;
            };
            cmb_del {
                timeout-ms = <50>;
                key-positions = <14 15>;
                bindings = <&kp DEL>;
            };
            cmb_shft {
                timeout-ms = <50>;
                key-positions = <34 35>;
                bindings = <&kp RSHFT>;
            };
            cmb_upRight {
                timeout-ms = <50>;
                key-positions = <57 58>;
                bindings = <&kp UP>;
            };
            cmb_enter {
                timeout-ms = <50>;
                key-positions = <48 49>;
                bindings = <&kp RET>;
            };
            cmb_up {
                timeout-ms = <50>;
                key-positions = <15 53>;
                bindings = <&kp UP>;
            };
            cmb_dn {
                timeout-ms = <50>;
                key-positions = <27 53>;
                bindings = <&kp DOWN>;
            };
            cmb_left {
                timeout-ms = <50>;
                key-positions = <26 53>;
                bindings = <&kp LEFT>;
            };
            cmb_right {
                timeout-ms = <50>;
                key-positions = <28 53>;
                bindings = <&kp RIGHT>;
            };
            cmb_pi {
                timeout-ms = <50>;
                key-positions = <36 53>;
                bindings = <&sym_pi>;
            };
            cmb_deg {
                timeout-ms = <50>;
                key-positions = <37 53>;
                bindings = <&sym_deg>;
            };
            cmb_sig {
                timeout-ms = <50>;
                key-positions = <38 53>;
                bindings = <&sym_sig>;
            };
            cmb_mueps {
                timeout-ms = <50>;
                key-positions = <40 41 53>;
                bindings = <&sym_mueps>;
            };
            cmb_mu {
                timeout-ms = <50>;
                key-positions = <40 53>;
                bindings = <&sym_mu>;
            };
            cmb_eps {
                timeout-ms = <50>;
                key-positions = <41 53>;
                bindings = <&sym_eps>;
            };
            cmb_plsmns {
                timeout-ms = <50>;
                key-positions = <28 29 53>;
                bindings = <&sym_plsmns>;
            };
            cmb_pscrn {
                timeout-ms = <50>;
                key-positions = <50 53>;
                bindings = <&kp PSCRN>;
            };
            cmb_025 {
                timeout-ms = <50>;
                key-positions = <1 53>;
                bindings = <&mcr_025>;
            };
            cmb_125 {
                timeout-ms = <50>;
                key-positions = <2 53>;
                bindings = <&mcr_125>;
            };
            cmb_250 {
                timeout-ms = <50>;
                key-positions = <3 53>;
                bindings = <&mcr_250>;
            };
            cmb_375 {
                timeout-ms = <50>;
                key-positions = <4 53>;
                bindings = <&mcr_375>;
            };
            cmb_500 {
                timeout-ms = <50>;
                key-positions = <5 53>;
                bindings = <&mcr_500>;
            };
        };
    };
};

/ {
    // Activate ADJUST layer by pressing numarrow and code
    //conditional_layers {
    //     compatible = "zmk,conditional-layers";
    //     adjust_layer {
    //         if-layers = <NUMBER CODE>;
    //         then-layer = <ADJUST>;
    //     };
    //};
    
    behaviors {
        mo_tog: behavior_mo_tog {
            compatible = "zmk,behavior-hold-tap";
            label = "mo_tog";
            #binding-cells = <2>;
            flavor = "hold-preferred";
            tapping-term-ms = <200>;
            bindings = <&mo>, <&tog>;
        };
        td_Lshftcaps: td_Lshftcaps {
            compatible = "zmk,behavior-tap-dance";
            label = "td_Lshftcaps";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&kp LSHFT>, <&kp CAPS>;
        };
        td_Rshftcaps: td_Rshftcaps {
            compatible = "zmk,behavior-tap-dance";
            label = "td_Rshftcaps";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&kp RSHFT>, <&kp CAPS>;
        };
    };
  
    keymap {
        compatible = "zmk,keymap";
        
        default_layer {
/* ╭─────────────────────────────────╮                 ╭──────────────────────────────────╮
   |   ESC    1    2    3    4    5  |                 |  6    7    8    9    0    BKSPC  |
   |   TAB    Q    W    E    R    T  |                 |  Y    U    I    O    P      |    |
   |SHFT/CAP  A    S    D    F    G  ╰───────╮ ╭───────╯  H    J    K    L    ;:    ' "   |
   |   CTRL   Z    X    C    V    B     C_PP | | C_PP     N    M    ,    .    /?  SHFT/CAP|
   ╰────────────╮ WIN  ALT ENTER RAISE SPACE | | SPACE RAISE   <-   v   -> ╭──────────────╯
                ╰────────────────────────────╯ ╰───────────────────────────╯              */
            bindings = <
&kp ESC       &kp N1 &kp N2   &kp N3   &kp N4  &kp N5                        &kp N6      &kp N7   &kp N8    &kp N9   &kp N0   &kp BSPC
&kp TAB       &kp Q  &kp W    &kp E    &kp R   &kp T                         &kp Y       &kp U    &kp I     &kp O    &kp P    &kp PIPE
&td_Lshftcaps &kp A  &kp S    &kp D    &kp F   &kp G                         &kp H       &kp J    &kp K     &kp L    &kp SEMI &kp APOS
&kp LCTRL     &kp Z  &kp X    &kp C    &kp V   &kp B     &kp C_PP  &kp C_PP  &kp N       &kp M    &kp COMMA &kp DOT  &kp FSLH &td_Rshftcaps
                     &kp LGUI &kp LALT &kp RET &mo RAISE &kp SPACE &kp SPACE &mo_tog 1 1 &kp LEFT &kp DOWN &kp RIGHT
            >;
            sensor-bindings = <&inc_dec_kp C_VOL_DN C_VOL_UP &inc_dec_kp UP DOWN>;
        };
        
        raise_layer {
/* ╭───────────────────────────────────╮                 ╭───────────────────────────────────╮
   |    `      ~     (    )    $    () |                 | .025  .125  .25  .375  0.5  BKSPC |
   |   TAB     7     8    9    =    _  |                 |  σ     µ     ε    {     }   BSLH  |
   |MirrorLyr  4     5    6    +    -  ╰───────╮ ╭───────╯  °     π     ±    [     ]         |
   |           1     2    3    *    /     C_PP | | C_PP    HOME  END    ,    .      AdjustLyr|
   ╰────────────╮    0    .  ENTER       SPACE | | SPACE          <-    v   -> ╭─────────────╯
                ╰──────────────────────────────╯ ╰─────────────────────────────╯              */
            bindings = <
&kp GRAVE  &kp TILDE &kp LPAR &kp RPAR &kp DLLR  &paren                       &mcr_025 &mcr_125 &mcr_250 &mcr_375 &mcr_500 &kp BSPC
&trans     &kp N7    &kp N8   &kp N9   &kp EQUAL &kp UNDER                    &sym_sig &sym_mu  &sym_eps &kp LBRC &kp RBRC &kp BSLH
&mo MIRROR &kp N4    &kp N5   &kp N6   &kp PLUS  &kp MINUS                    &sym_deg &sym_pi  &plsmns  &kp LBKT &kp RBKT &none
&trans     &kp N1    &kp N2   &kp N3   &kp STAR  &kp FSLH  &trans      &trans &kp HOME &kp END  &trans   &trans   &none    &mo ADJUST
                     &kp N0   &kp DOT  &trans    &trans    &trans      &trans &trans   &trans   &trans   &trans
            >;
            sensor-bindings = <&inc_dec_kp HOME END &inc_dec_kp LEFT RIGHT>;
        };
        
        mirror_layer {
// ------------------------------------------------------------------------------------------------------------
// | BKSPC |  0   |  9  |  8  |  7  |  6  |                 |      |      |       |      |       |     |
// |   |   |  P   |  O  |  I  |  U  |  Y  |                 |      |      |       |      |       |     |
// |       |  ; : |  L  |  K  |  J  |  H  |                 |      |      |       |      |       |     |
// | RSHFT |  / ? |  .  |  ,  |  M  |  N  |PLAY/PS| |PLAY/PS|      |      |       |      |       |     |
//                |PSCRN|     | RET |     | SPACE | |       |      |      |       |      |
            bindings = <
&kp BSPC      &kp N0   &kp N9    &kp N8    &kp N7 &kp N6                 &none &none  &none &none &none &none
&kp PIPE      &kp P    &kp O     &kp I     &kp U  &kp Y                  &none &none  &none &none &none &none
&trans        &kp SEMI &kp L     &kp K     &kp J  &kp H                  &none &none  &none &none &none &none
&td_Rshftcaps &kp FSLH &kp DOT   &kp COMMA &kp M  &kp N  &trans   &trans &none &none  &none &none &none &none
                       &kp PSCRN &none     &trans &trans &trans   &trans &trans &none &none &none
            >;
            sensor-bindings = <&inc_dec_kp HOME END &inc_dec_kp LEFT RIGHT>;
        };
        
        Adjust_layer {
/* ╭─────────────────────────────────╮          ╭─────────────────────────╮
   │ BTCLR   BT1  BT2  BT3  BT4  BT5 │          │  _   _   _   _   _   _  │
   │ ExtPwr  Hue+ Sat+ Bri+ Eff   _  │          │  _   _   _   _   _   _  │
   │ TogRGB  Hue- Sat- Bri-  _    _  ╰────╮ ╭───╯  _   _   _   _   _   _  │
   │   _      _    _    _    _    _     _ | | _    _   _   _   _   _   _  │
   ╰────────╮ _    _    _    _    _     _ │ │ _    _   _   _   _ ╭────────╯
            ╰─────────────────────────────╯ ╰────────────────────╯        */
        bindings = <
&bt BT_CLR                      &bt BT_SEL 0    &bt BT_SEL 1    &bt BT_SEL 2    &bt BT_SEL 3    &bt BT_SEL 4               &none &none &none &none &none &none
&ext_power EXT_POWER_TOGGLE_CMD &rgb_ug RGB_HUI &rgb_ug RGB_SAI &rgb_ug RGB_BRI &rgb_ug RGB_EFF &none                      &none &none &none &none &none &none
&rgb_ug RGB_TOG                 &rgb_ug RGB_HUD &rgb_ug RGB_SAD &rgb_ug RGB_BRD &none           &none                      &none &none &none &none &none &none
&none                           &none           &none           &none           &none           &none        &trans &trans &none &none &none &none &none &none
                                                &none           &none           &none           &none        &none  &none  &none &none &none &none
            >;
            sensor-bindings = <&inc_dec_kp HOME END &inc_dec_kp LEFT RIGHT>;
        };
    };
};
